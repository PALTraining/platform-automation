resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:
- name: configuration
  type: git
  icon: github-circle
  source:
    private_key: ((git-private-key.private_key))
    uri: ((git_pcf_configuration_uri))
    branch: master

- name: platform-automation-tasks
  type: s3
  source:
    endpoint: ((s3_endpoint))
    access_key_id: ((s3_access_key_id))
    bucket: platform-automation
    secret_access_key: ((s3_secret_access_key))
    regexp: platform-automation-tasks-(.*).zip
    skip_ssl_verification: true

- name: platform-automation-image
  type: s3
  source:
    endpoint: ((s3_endpoint))
    access_key_id: ((s3_access_key_id))
    bucket: platform-automation
    secret_access_key: ((s3_secret_access_key))
    regexp: platform-automation-tasks-(.*).zip
    skip_ssl_verification: true


# Re-use
credhub-interpolate: &credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: config
    params:
      CREDHUB_CA_CERT: ((credhub_ca_cert.ca))
      CREDHUB_CLIENT: ((credhub_client))
      CREDHUB_SECRET: ((credhub_secret))
      CREDHUB_SERVER: ((credhub_server))
      INTERPOLATION_PATHS: ((foundation))
      PREFIX: /concourse/((foundation))

jobs:

  - name: upload-and-stage-((product-name))
    serial: true
    plan:
    - in_parallel:
      - get: platform-automation-image
        params:
          unpack: true
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: configuration
    - task: credhub-interpolate
      <<: *credhub-interpolate
    - task: download-product-and-stemcell
      image: platform-automation-image
      file: platform-automation-tasks/tasks/download-product.yml
      input_mapping:
        config: config
      params:
        CONFIG_FILE: ((foundation))/download-product-configs/((product-name)).yml
      output_mapping: {downloaded-stemcell: product-stemcell}
    - task: upload-product
      image: platform-automation-image
      file: platform-automation-tasks/tasks/upload-product.yml
      input_mapping:
        product: downloaded-product
        env: config
      params:
        ENV_FILE: ((foundation))/env/env.yml
    - task: upload-stemcell
      image: platform-automation-image
      file: platform-automation-tasks/tasks/upload-stemcell.yml
      input_mapping:
        stemcell: product-stemcell
        env: config
      params:
        ENV_FILE: ((foundation))/env/env.yml
    - task: stage-product
      image: platform-automation-image
      file: platform-automation-tasks/tasks/stage-product.yml
      input_mapping:
        product: downloaded-product
        env: config
      params:
        ENV_FILE: ((foundation))/env/env.yml

  - name: configure-product-((product-name))
    serial: true
    plan:
      - in_parallel:
          - get: platform-automation-image
            params:
              unpack: true
          - get: platform-automation-tasks
            params:
              unpack: true
            passed:
            - upload-and-stage-((product-name))
          - get: configuration
      - task: credhub-interpolate
        <<: *credhub-interpolate
      - task: configure-product
        image: platform-automation-image
        file: platform-automation-tasks/tasks/configure-product.yml
        input_mapping:
          config: config
          env: config
        params:
          CONFIG_FILE: ((foundation))/products/((product-name)).yml
          ENV_FILE: ((foundation))/env/env.yml

  - name: apply-product-changes
    serial: true
    plan:
      - in_parallel:
          - get: platform-automation-image
            params:
              unpack: true
          - get: platform-automation-tasks
            params:
              unpack: true
            passed: [configure-product-((product-name))]
          - get: configuration
      - task: credhub-interpolate
        <<: *credhub-interpolate
      - task: apply-product-changes
        image: platform-automation-image
        file: platform-automation-tasks/tasks/apply-changes.yml
        input_mapping:
          env: config
        params:
          ENV_FILE: ((foundation))/env/env.yml
